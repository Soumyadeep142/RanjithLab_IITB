###############################################
# LAMMPS script for a polymer
###############################################

###
# Box and units  (use LJ units and periodic boundaries)
###

units lj                 # use lennard-jones (i.e. dimensionless) units
atom_style bond         # atoms with bonds and angles

boundary p p p           # all boundaries are periodic

###
# Pair interactions require lists of neighbours to be calculated
###
neighbor 1.9 bin
neigh_modify every 1 delay 1 check yes 

variable file_name equal replace_length  # 10, 20, ..., 100 atoms
variable ensemble equal replace_ensemble    #1, 2, 3, ..... 50 atoms
### 
# READ "start" data file 
###
read_data polymer_data_${ensemble}.txt 

### 
# Reset timestep 
###
reset_timestep 0 

###
# Define groups 
###
group all type 1  #(atom type 1 is group 'all')


###
# Set up interactions - start with 'soft' potentials
###

## angles
#angle_style  cosine
#angle_coeff   1  20.0
# this choice gives a polymer with the same persistence length as DNA

## Between bonded atoms
bond_style   harmonic 
# For style harmonic, specify:
#   * bond type
#   * K (energy/distance^2) 
#   * R0 (distance)
bond_coeff   1   90.0   1.1 


## Between non-bonded atoms
pair_style     soft 1.12246152962189
#  pair_coeff for soft, specify 3:
#    * atom type interacting with
#    * atom type 
#    * energy
#    * cutoff
pair_coeff * *  100.0 1.12246152962189 

minimize 1.0e-4 1.0e-6 10000 100000
###
# Set up fixes
###
variable seed equal 54651*${file_name}*${ensemble}     # a seed for the thermostat

fix 1 all nve                             # NVE integrator
fix 2 all langevin   1.0 1.0 1.0 ${seed}  # langevin thermostat

##### Output thermodynamic info  (temperature, energy, pressure, etc.) #####
thermo 1000
thermo_style   custom   step  temp  epair  emol  press  vol
############################################################################


##### Output thermodynamic info to file  ###################################
variable t equal step
#variable mytemp equal temp
#variable myepair equal epair
#fix mythermofile all print 1000 "$t ${mytemp} ${myepair}" file thermo_output.dat screen no
############################################################################

############################################################################
#### Set up a compute for R_g
compute myRG2compute all gyration
#### and write it to a file
variable RG2 equal c_myRG2compute
fix myRG2file all print 1000 "$t ${RG2}" file radius_of_gyration_squared_${file_name}_${ensemble}.txt screen yes
############################################################################

###
# set timestep of integrator
###
timestep 0.01 

###
# run integration for a number of steps to equilibrate with soft potnentials
###
 
run 5000



###
# Now switch to LJ potential and FENE bonds

## Between bonded atoms
bond_style   fene
special_bonds lj 0 1 1
# For style FENE, specify:
#   * bond type
#   * K (energy/distance^2) 
#   * R0 (distance)
#   * epsilon
#   * sigma
bond_coeff   1    30.0   1.6   1.0   1.0

## Between non-bonded atoms
pair_style      lj/cut 1.12246152962189
pair_modify shift yes        # option to ensure energy is calculated corectly
#  pair_coeff for LJ, specify 4:
#    * atom type interacting with
#    * atom type
#    * energy
#    * mean diameter of the two atom types
#    * cutoff
pair_coeff      1 1 0 1.0 1.12246152962189
minimize 1e-4 1e-6 1000 100000

###
# now do a longer run
###
 
run 10000000

#write_restart restart_${file_name}.txt

dump 1 all xyz 1000 trajectory.xyz
run 1000000
